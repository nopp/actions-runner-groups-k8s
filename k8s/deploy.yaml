apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: actions-runner
  name: runner-v3
  namespace: actions-runner
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: actions-runner
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: actions-runner
    spec:
      containers:
      - image: docker:dind
        imagePullPolicy: IfNotPresent
        name: docker
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /certs/server
          name: docker-certs
        - mountPath: /opt/_work
          name: work
      - env:
        - name: DOCKER_HOST
          value: localhost:2376
        - name: DOCKER_TLS_VERIFY
          value: "1"
        - name: ORGANIZATION_NAME
          value: yourOrgHere
        - name: GROUP_NAME
          value: default
        - name: GITHUB_PAT
          valueFrom:
            secretKeyRef:
              key: pat
              name: github
        image: ghcr.io/nopp/actions-runner-groups-k8s:0.0.8
        imagePullPolicy: Always
        name: runner
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/sre/.docker
          name: docker-certs
        - mountPath: /root/.docker
          name: docker-certs
        - mountPath: /github/home/.docker
          name: docker-certs
        - mountPath: /opt/_work
          name: work
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: docker-certs
      - emptyDir: {}
        name: work
